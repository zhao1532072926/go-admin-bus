// This file is generated by GoAdmin CLI adm.
package bus

import (
	"go-admin-bus/bus/config"

	"github.com/GoAdminGroup/go-admin/context"
	"github.com/GoAdminGroup/go-admin/modules/db"
	"github.com/GoAdminGroup/go-admin/plugins/admin/modules/table"
	"github.com/GoAdminGroup/go-admin/template/types/form"
)



func initGenerators() map[string]table.Generator {
	services := config.GetAllServiceNames()
	generators := make(map[string]table.Generator)

	for _, service := range services {
		// 为每个维度生成用户表
		generators[service.Users] = createUsersGenerator(service.Users)

		// 为每个维度的子服务生成详情表
		for _, detail := range service.Details {
			generators[detail] = createDetailsGenerator(detail)
		}
	}

	return generators
}

func createUsersGenerator(tableName string) table.Generator {
	return func(ctx *context.Context) table.Table {
		users := table.NewDefaultTable(ctx, table.DefaultConfigWithDriver("mysql").SetPrimaryKey("id", db.Int))

		info := users.GetInfo().HideFilterArea()

		info.AddField("Id", "id", db.Int).FieldFilterable()
		info.AddField("Phone", "phone", db.Varchar)
		info.AddField("Password", "password", db.Varchar)

		info.SetTable(tableName).SetTitle(tableName).SetDescription(tableName)

		formList := users.GetForm()
		formList.AddField("Id", "id", db.Int, form.Default)
		formList.AddField("Phone", "phone", db.Varchar, form.Text)
		formList.AddField("Password", "password", db.Varchar, form.Password)

		formList.SetTable(tableName).SetTitle(tableName).SetDescription(tableName)

		return users
	}
}

func createDetailsGenerator(tableName string) table.Generator {
	return func(ctx *context.Context) table.Table {
		details := table.NewDefaultTable(ctx, table.DefaultConfigWithDriver("mysql").SetPrimaryKey("id", db.Int))

		info := details.GetInfo().HideFilterArea()

		info.AddField("Id", "id", db.Int).FieldFilterable()
		info.AddField("Sender", "sender", db.Varchar)
		info.AddField("Spu_id", "spu_id", db.Varchar)
		info.AddField("Spu_name", "spu_name", db.Text)
		info.AddField("Shop_id", "shop_id", db.Varchar)
		info.AddField("Shop_name", "shop_name", db.Text)
		info.AddField("Send_time", "send_time", db.Timestamp)
		info.AddField("Data_body", "data_body", db.Text)
		info.AddField("Remove", "remove", db.Int)
		info.AddField("Youhui", "youhui", db.Text)

		info.SetTable(tableName).SetTitle(tableName).SetDescription(tableName)

		formList := details.GetForm()
		formList.AddField("Id", "id", db.Int, form.Default)
		formList.AddField("Sender", "sender", db.Varchar, form.Text)
		formList.AddField("Spu_id", "spu_id", db.Varchar, form.Text)
		formList.AddField("Spu_name", "spu_name", db.Text, form.RichText)
		formList.AddField("Shop_id", "shop_id", db.Varchar, form.Text)
		formList.AddField("Shop_name", "shop_name", db.Text, form.RichText)
		formList.AddField("Send_time", "send_time", db.Timestamp, form.Datetime)
		formList.AddField("Data_body", "data_body", db.Text, form.RichText)
		formList.AddField("Remove", "remove", db.Int, form.Number)
		formList.AddField("Youhui", "youhui", db.Text, form.RichText)

		formList.SetTable(tableName).SetTitle(tableName).SetDescription(tableName)

		return details
	}
}
